<launch>

  <!-- 0) xacro 옵션 -->
  <arg name="xacro_opts" default="--inorder"/>

  <!-- 1) Gazebo 빈 월드 -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name"   value="$(find husky_gazebo)/worlds/clearpath_playpen.world"/>
    <arg name="paused"       value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui"          value="true"/>
  </include>

  <!-- 2) URDF(xacro) → /robot_description -->
  <param name="robot_description"
         command="$(find xacro)/xacro $(arg xacro_opts) $(find husky_dwa_description)/urdf/husky_os1.urdf.xacro"/>

  <!-- 3) 로봇 스폰 -->
  <node name="spawn_husky"
        pkg="gazebo_ros"
        type="spawn_model"
        output="screen"
        args="-urdf -param robot_description -model husky"/>

  <!-- Husky control -->
  <include file="$(find husky_control)/launch/control.launch" />

  <!-- Husky navigation (mapless) -->
  <include file="$(find husky_navigation)/launch/move_base_mapless_demo.launch" />

  <!-- Joint State Publisher -->
  <node pkg="joint_state_publisher"
        type="joint_state_publisher"
        name="joint_state_publisher">
    <param name="use_gui" value="false"/>
  </node>

  <!-- Teleop Keyboard -->
  <node pkg="teleop_twist_keyboard"
        type="teleop_twist_keyboard.py"
        name="teleop_keyboard"
        output="screen">
    <param name="repeat_rate" value="20.0"/>
    <remap from="cmd_vel" to="/cmd_vel"/>
  </node>

  <!-- RViz -->
  <node pkg="rviz"
        type="rviz"
        name="rviz"
        output="screen"
        args="-d $(find husky_dwa)/rviz/husky_os1.rviz">
    <param name="use_sim_time" value="true"/>
  </node>

  <!-- PointCloud→LaserScan: 여기서만 /scan 으로 remap -->
  <node pkg="pointcloud_to_laserscan"
        type="pointcloud_to_laserscan_node"
        name="pc2_to_scan"
        output="screen">
    <param name="target_frame"        value="base_link"/>
    <param name="transform_tolerance" value="0.01"/>
    <param name="min_height"          value="0.0"/>
    <param name="max_height"          value="2.0"/>
    <param name="angle_min"           value="-3.14"/>
    <param name="angle_max"           value="3.14"/>
    <param name="angle_increment"     value="0.0087"/>
    <param name="scan_time"           value="0.1"/>
    <param name="range_min"           value="0.1"/>
    <param name="range_max"           value="30.0"/>
    <remap from="cloud_in" to="/os1/points"/>
    <remap from="scan"     to="/scan"/>
  </node>

  <node pkg="robot_localization"
      type="ekf_localization_node"
      name="ekf_localization_node"
      output="screen">
  <rosparam command="load" file="$(find husky_control)/config/localization.yaml" />
  <remap from="odometry/filtered" to="/odom"/>
</node>


</launch>
