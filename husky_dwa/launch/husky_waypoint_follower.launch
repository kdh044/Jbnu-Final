<launch>

  <!-- 1. geo_planner.launch 포함 (OSM 지도 시각화 + RViz + waypoint 처리) -->
  <include file="$(find osm_cartography)/launch/geo_planner.launch" />

  <!-- 2. Gazebo 빈 월드 실행 -->
  <arg name="xacro_opts" default="--inorder"/>
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find gazebo_ros)/worlds/empty.world"/>  <!-- 또는 다른 맵 -->
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
  </include>

  <!-- URDF → /robot_description 등록 -->
  <param name="robot_description"
         command="$(find xacro)/xacro $(arg xacro_opts) $(find husky_dwa_description)/urdf/husky_os1.urdf.xacro"/>

  <!-- Husky 로봇을 Gazebo에 spawn -->
  <node name="spawn_husky"
        pkg="gazebo_ros"
        type="spawn_model"
        output="screen"
        args="-urdf -param robot_description -model husky -x 0 -y 0 -z 0" />

  <include file="$(find husky_navigation)/launch/move_base_mapless_demo.launch" />

  <node pkg="pointcloud_to_laserscan"
        type="pointcloud_to_laserscan_node"
        name="pc2_to_scan"
        output="screen">
    <param name="target_frame"        value="base_link"/>
    <param name="transform_tolerance" value="0.01"/>
    <param name="min_height"          value="0.0"/>
    <param name="max_height"          value="2.0"/>
    <param name="angle_min"           value="-3.14"/>
    <param name="angle_max"           value="3.14"/>
    <param name="angle_increment"     value="0.0087"/>
    <param name="scan_time"           value="0.1"/>
    <param name="range_min"           value="0.1"/>
    <param name="range_max"           value="30.0"/>
    <remap from="cloud_in" to="/os1/points"/>
    <remap from="scan"     to="/scan"/>
  </node>

  <!-- Husky 제어 노드 -->
  <include file="$(find husky_control)/launch/control.launch" />

  <!-- 상태 퍼블리셔 -->
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" />

  <node pkg="robot_localization" type="ekf_localization_node" name="ekf_localization_node" output="screen">
    <rosparam command="load" file="$(find husky_control)/config/localization.yaml"/>
    <param name="publish_tf" value="true"/> 
  </node>
</launch>